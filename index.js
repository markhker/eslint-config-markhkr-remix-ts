module.exports = {
  rules: {
    '@typescript-eslint/member-delimiter-style': ['error', {
      multiline: {
        delimiter: 'none',
        requireLast: false,
      },
      singleline: {
        delimiter: 'comma',
        requireLast: false,
      },
    }],
    quotes: ['error', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
    'quote-props': ['error', 'as-needed'],
    semi: ['error', 'never'],
    'no-unexpected-multiline': 'error',
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': ['error', { after: true }],
    'object-curly-spacing': ['error', 'always'],
    'eol-last': 'error',
    'no-multi-spaces': 'error',
    'jsx-quotes': ['error', 'prefer-double'],
    'react-hooks/exhaustive-deps': 0,
    'react/jsx-indent': ['error', 2, {
      checkAttributes: false,
      indentLogicalExpressions: true,
    }],
    'react/jsx-tag-spacing': ['error', {
      closingSlash: 'never',
      beforeSelfClosing: 'always',
      afterOpening: 'never',
      beforeClosing: 'never',
    }],
    'react/jsx-curly-brace-presence': ['error', {
      props: 'never',
      children: 'never',
    }],
    'react/jsx-indent-props': ['error', 2],
    indent: ['error', 2, {
      SwitchCase: 1,
      VariableDeclarator: 1,
      outerIIFEBody: 1,
      MemberExpression: 1,
      FunctionDeclaration: { parameters: 1, body: 1 },
      FunctionExpression: { parameters: 1, body: 1 },
      CallExpression: { arguments: 1 },
      ArrayExpression: 1,
      ObjectExpression: 1,
      ImportDeclaration: 1,
      flatTernaryExpressions: false,
      ignoreComments: false,
      ignoredNodes: ['TemplateLiteral *', 'JSXElement', 'JSXElement > *', 'JSXAttribute', 'JSXIdentifier', 'JSXNamespacedName', 'JSXMemberExpression', 'JSXSpreadAttribute', 'JSXExpressionContainer', 'JSXOpeningElement', 'JSXClosingElement', 'JSXFragment', 'JSXOpeningFragment', 'JSXClosingFragment', 'JSXText', 'JSXEmptyExpression', 'JSXSpreadChild'],
      offsetTernaryExpressions: true,
    }],
    'import/order': [
      'error',
      {
        groups: ['builtin', 'external', 'internal', ['parent', 'sibling'], ['index', 'object'], 'unknown'],
        'newlines-between': 'always',
        alphabetize: { order: 'asc' },
        pathGroups: [
          { pattern: '~/config/**', group: 'internal' },
          { pattern: '~/cookies/**', group: 'internal' },
          { pattern: '~/services/**', group: 'internal' },
          { pattern: '~/styles/**', group: 'internal' },
          { pattern: '~/components/**', group: 'internal' },
          { pattern: '~/state/**', group: 'internal' },
          { pattern: '~/hooks**', group: 'internal' },
          { pattern: '~/assets/**', group: 'internal' },
          { pattern: '~/layouts/**', group: 'internal' },
          { pattern: '~/screens/**', group: 'internal' },
          { pattern: '~/types**', group: 'internal' },
          { pattern: '~/routes/**', group: 'internal' },
          { pattern: '~/**', group: 'internal' },
          { pattern: '@core/**', group: 'internal' },
          { pattern: '@types', group: 'internal' },
        ],
        pathGroupsExcludedImportTypes: ['builtin'],
      },
    ],
  }
}
